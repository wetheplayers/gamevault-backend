// Generated by Supabase MCP - do not edit manually
// Regenerate with: Supabase MCP -> Generate TypeScript types

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  // Allows to automatically instantiate createClient with right options
  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)
  __InternalSupabase: {
    PostgrestVersion: "13.0.4"
  }
  public: {
    Tables: {
      age_ratings: {
        Row: {
          board_id: string
          certificate_id: string | null
          created_at: string
          created_by: string | null
          game_id: string | null
          id: string
          interactive_elements: string | null
          notes: string | null
          rating_category_id: string
          rating_date: string | null
          region_id: string | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          board_id: string
          certificate_id?: string | null
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          interactive_elements?: string | null
          notes?: string | null
          rating_category_id: string
          rating_date?: string | null
          region_id?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          board_id?: string
          certificate_id?: string | null
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          interactive_elements?: string | null
          notes?: string | null
          rating_category_id?: string
          rating_date?: string | null
          region_id?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "age_ratings_board_id_fkey"
            columns: ["board_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "age_ratings_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "age_ratings_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "age_ratings_rating_category_id_fkey"
            columns: ["rating_category_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "age_ratings_region_id_fkey"
            columns: ["region_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      audit_logs: {
        Row: {
          action: string
          created_at: string
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          record_id: string
          table_name: string
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          record_id: string
          table_name: string
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          record_id?: string
          table_name?: string
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      change_requests: {
        Row: {
          approved_at: string | null
          confidence_score: number | null
          created_at: string
          entity_id: string | null
          entity_type: string
          id: string
          justification: string | null
          proposed_changes: Json
          review_notes: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          status: string | null
          submitted_by: string | null
        }
        Insert: {
          approved_at?: string | null
          confidence_score?: number | null
          created_at?: string
          entity_id?: string | null
          entity_type: string
          id?: string
          justification?: string | null
          proposed_changes: Json
          review_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string | null
          submitted_by?: string | null
        }
        Update: {
          approved_at?: string | null
          confidence_score?: number | null
          created_at?: string
          entity_id?: string | null
          entity_type?: string
          id?: string
          justification?: string | null
          proposed_changes?: Json
          review_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string | null
          submitted_by?: string | null
        }
        Relationships: []
      }
      companies: {
        Row: {
          country_id: string | null
          created_at: string
          created_by: string | null
          deleted_at: string | null
          deleted_by: string | null
          description: string | null
          founded_date: string | null
          id: string
          is_defunct: boolean | null
          name: string
          updated_at: string
          updated_by: string | null
          website: string | null
        }
        Insert: {
          country_id?: string | null
          created_at?: string
          created_by?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          description?: string | null
          founded_date?: string | null
          id?: string
          is_defunct?: boolean | null
          name: string
          updated_at?: string
          updated_by?: string | null
          website?: string | null
        }
        Update: {
          country_id?: string | null
          created_at?: string
          created_by?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          description?: string | null
          founded_date?: string | null
          id?: string
          is_defunct?: boolean | null
          name?: string
          updated_at?: string
          updated_by?: string | null
          website?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "companies_country_id_fkey"
            columns: ["country_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      credits: {
        Row: {
          created_at: string
          created_by: string | null
          credit_role_id: string
          department_id: string | null
          game_id: string | null
          id: string
          is_lead: boolean | null
          notes: string | null
          order_index: number | null
          person_id: string | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          credit_role_id: string
          department_id?: string | null
          game_id?: string | null
          id?: string
          is_lead?: boolean | null
          notes?: string | null
          order_index?: number | null
          person_id?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          credit_role_id?: string
          department_id?: string | null
          game_id?: string | null
          id?: string
          is_lead?: boolean | null
          notes?: string | null
          order_index?: number | null
          person_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "credits_credit_role_id_fkey"
            columns: ["credit_role_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "credits_department_id_fkey"
            columns: ["department_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "credits_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "credits_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "credits_person_id_fkey"
            columns: ["person_id"]
            isOneToOne: false
            referencedRelation: "people"
            referencedColumns: ["id"]
          },
        ]
      }
      editions: {
        Row: {
          bonus_content_description: string | null
          created_at: string
          created_by: string | null
          default_cover_asset_id: string | null
          deleted_at: string | null
          deleted_by: string | null
          digital_contents: string | null
          edition_name: string
          game_id: string
          id: string
          includes_base_game: boolean | null
          is_port: boolean | null
          physical_contents: string | null
          release_type_id: string | null
          sku_code: string | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          bonus_content_description?: string | null
          created_at?: string
          created_by?: string | null
          default_cover_asset_id?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          digital_contents?: string | null
          edition_name: string
          game_id: string
          id?: string
          includes_base_game?: boolean | null
          is_port?: boolean | null
          physical_contents?: string | null
          release_type_id?: string | null
          sku_code?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          bonus_content_description?: string | null
          created_at?: string
          created_by?: string | null
          default_cover_asset_id?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          digital_contents?: string | null
          edition_name?: string
          game_id?: string
          id?: string
          includes_base_game?: boolean | null
          is_port?: boolean | null
          physical_contents?: string | null
          release_type_id?: string | null
          sku_code?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "editions_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "editions_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "editions_release_type_id_fkey"
            columns: ["release_type_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      entity_versions: {
        Row: {
          change_reason: string | null
          changed_by: string | null
          changes: Json
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          version_number: number
        }
        Insert: {
          change_reason?: string | null
          changed_by?: string | null
          changes: Json
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          version_number: number
        }
        Update: {
          change_reason?: string | null
          changed_by?: string | null
          changes?: Json
          created_at?: string
          entity_id?: string | null
          entity_type?: string | null
          id?: string
          version_number?: number
        }
        Relationships: []
      }
      external_ids: {
        Row: {
          created_at: string
          created_by: string | null
          entity_id: string
          entity_type: string
          id: string
          region_id: string | null
          source_id: string
          url: string | null
          value: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          entity_id: string
          entity_type: string
          id?: string
          region_id?: string | null
          source_id: string
          url?: string | null
          value: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          entity_id?: string
          entity_type?: string
          id?: string
          region_id?: string | null
          source_id?: string
          url?: string | null
          value?: string
        }
        Relationships: [
          {
            foreignKeyName: "external_ids_region_id_fkey"
            columns: ["region_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "external_ids_source_id_fkey"
            columns: ["source_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      game_aliases: {
        Row: {
          alias: string
          created_at: string
          created_by: string | null
          game_id: string | null
          id: string
          region_id: string | null
          source: string | null
        }
        Insert: {
          alias: string
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          region_id?: string | null
          source?: string | null
        }
        Update: {
          alias?: string
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          region_id?: string | null
          source?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "game_aliases_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_aliases_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_aliases_region_id_fkey"
            columns: ["region_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      game_company_roles: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          game_id: string | null
          id: string
          notes: string | null
          region_id: string | null
          role_id: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          notes?: string | null
          region_id?: string | null
          role_id: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          game_id?: string | null
          id?: string
          notes?: string | null
          region_id?: string | null
          role_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "game_company_roles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_company_roles_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_company_roles_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_company_roles_region_id_fkey"
            columns: ["region_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_company_roles_role_id_fkey"
            columns: ["role_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      game_genres: {
        Row: {
          game_id: string
          genre_id: string
        }
        Insert: {
          game_id: string
          genre_id: string
        }
        Update: {
          game_id?: string
          genre_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "game_genres_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_genres_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_genres_genre_id_fkey"
            columns: ["genre_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      game_localisations: {
        Row: {
          created_at: string
          created_by: string | null
          display_title: string
          game_id: string | null
          id: string
          is_official: boolean | null
          locale: string
          romanised_title: string | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          display_title: string
          game_id?: string | null
          id?: string
          is_official?: boolean | null
          locale: string
          romanised_title?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          display_title?: string
          game_id?: string | null
          id?: string
          is_official?: boolean | null
          locale?: string
          romanised_title?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "game_localisations_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_localisations_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
        ]
      }
      game_modes: {
        Row: {
          game_id: string
          mode_id: string
        }
        Insert: {
          game_id: string
          mode_id: string
        }
        Update: {
          game_id?: string
          mode_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "game_modes_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_modes_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_modes_mode_id_fkey"
            columns: ["mode_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      game_themes: {
        Row: {
          game_id: string
          theme_id: string
        }
        Insert: {
          game_id: string
          theme_id: string
        }
        Update: {
          game_id?: string
          theme_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "game_themes_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "game_statistics"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_themes_game_id_fkey"
            columns: ["game_id"]
            isOneToOne: false
            referencedRelation: "games"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "game_themes_theme_id_fkey"
            columns: ["theme_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      games: {
        Row: {
          accessibility_summary: string | null
          age_ratings_summary: string | null
          avg_length_completionist: number | null
          avg_length_extra: number | null
          avg_length_main: number | null
          business_model_notes: string | null
          canonical_title: string
          coop_supported: boolean | null
          cover_asset_id: string | null
          created_at: string
          created_by: string | null
          crossplay_supported: boolean | null
          crosssave_supported: boolean | null
          deleted_at: string | null
          deleted_by: string | null
          description_long: string | null
          engine_id: string | null
          first_announced_date: string | null
          first_release_date: string | null
          franchise_id: string | null
          id: string
          is_cloud_only: boolean | null
          is_vr_only: boolean | null
          is_vr_supported: boolean | null
          max_players_local: number | null
          max_players_online: number | null
          monetisation_model_id: string | null
          notes_internal: string | null
          official_site: string | null
          press_kit_url: string | null
          primary_genre_id: string | null
          series_position: number | null
          sort_title: string
          status: Database["public"]["Enums"]["game_status"]
          synopsis_short: string | null
          tech_notes: string | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          accessibility_summary?: string | null
          age_ratings_summary?: string | null
          avg_length_completionist?: number | null
          avg_length_extra?: number | null
          avg_length_main?: number | null
          business_model_notes?: string | null
          canonical_title: string
          coop_supported?: boolean | null
          cover_asset_id?: string | null
          created_at?: string
          created_by?: string | null
          crossplay_supported?: boolean | null
          crosssave_supported?: boolean | null
          deleted_at?: string | null
          deleted_by?: string | null
          description_long?: string | null
          engine_id?: string | null
          first_announced_date?: string | null
          first_release_date?: string | null
          franchise_id?: string | null
          id?: string
          is_cloud_only?: boolean | null
          is_vr_only?: boolean | null
          is_vr_supported?: boolean | null
          max_players_local?: number | null
          max_players_online?: number | null
          monetisation_model_id?: string | null
          notes_internal?: string | null
          official_site?: string | null
          press_kit_url?: string | null
          primary_genre_id?: string | null
          series_position?: number | null
          sort_title: string
          status?: Database["public"]["Enums"]["game_status"]
          synopsis_short?: string | null
          tech_notes?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          accessibility_summary?: string | null
          age_ratings_summary?: string | null
          avg_length_completionist?: number | null
          avg_length_extra?: number | null
          avg_length_main?: number | null
          business_model_notes?: string | null
          canonical_title?: string
          coop_supported?: boolean | null
          cover_asset_id?: string | null
          created_at?: string
          created_by?: string | null
          crossplay_supported?: boolean | null
          crosssave_supported?: boolean | null
          deleted_at?: string | null
          deleted_by?: string | null
          description_long?: string | null
          engine_id?: string | null
          first_announced_date?: string | null
          first_release_date?: string | null
          franchise_id?: string | null
          id?: string
          is_cloud_only?: boolean | null
          is_vr_only?: boolean | null
          is_vr_supported?: boolean | null
          max_players_local?: number | null
          max_players_online?: number | null
          monetisation_model_id?: string | null
          notes_internal?: string | null
          official_site?: string | null
          press_kit_url?: string | null
          primary_genre_id?: string | null
          series_position?: number | null
          sort_title?: string
          status?: Database["public"]["Enums"]["game_status"]
          synopsis_short?: string | null
          tech_notes?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "games_engine_id_fkey"
            columns: ["engine_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "games_franchise_id_fkey"
            columns: ["franchise_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "games_monetisation_model_id_fkey"
            columns: ["monetisation_model_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "games_primary_genre_id_fkey"
            columns: ["primary_genre_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      lookup_aliases: {
        Row: {
          alias: string
          created_at: string
          created_by: string | null
          id: string
          locale: string | null
          lookup_id: string | null
          source: string | null
        }
        Insert: {
          alias: string
          created_at?: string
          created_by?: string | null
          id?: string
          locale?: string | null
          lookup_id?: string | null
          source?: string | null
        }
        Update: {
          alias?: string
          created_at?: string
          created_by?: string | null
          id?: string
          locale?: string | null
          lookup_id?: string | null
          source?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "lookup_aliases_lookup_id_fkey"
            columns: ["lookup_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      lookups: {
        Row: {
          canonical_name: string
          created_at: string
          created_by: string | null
          deleted_at: string | null
          deleted_by: string | null
          description: string | null
          id: string
          is_active: boolean | null
          metadata: Json | null
          parent_id: string | null
          slug: string
          sort_order: number | null
          type: string
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          canonical_name: string
          created_at?: string
          created_by?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          metadata?: Json | null
          parent_id?: string | null
          slug: string
          sort_order?: number | null
          type: string
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          canonical_name?: string
          created_at?: string
          created_by?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          metadata?: Json | null
          parent_id?: string | null
          slug?: string
          sort_order?: number | null
          type?: string
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "lookups_parent_id_fkey"
            columns: ["parent_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      media: {
        Row: {
          asset_source: Database["public"]["Enums"]["media_source"]
          caption: string | null
          cdn_url: string | null
          checksum: string | null
          created_at: string
          created_by: string | null
          credit: string | null
          deleted_at: string | null
          deleted_by: string | null
          duration_sec: number | null
          embed_id: string | null
          embed_provider: string | null
          entity_id: string
          entity_type: string
          file_size_bytes: number | null
          height: number | null
          id: string
          is_nsfw: boolean | null
          is_official: boolean | null
          language_id: string | null
          media_type_id: string
          mime_type: string | null
          source_url: string | null
          storage_bucket: string | null
          storage_path: string | null
          title: string | null
          updated_at: string
          updated_by: string | null
          width: number | null
        }
        Insert: {
          asset_source: Database["public"]["Enums"]["media_source"]
          caption?: string | null
          cdn_url?: string | null
          checksum?: string | null
          created_at?: string
          created_by?: string | null
          credit?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          duration_sec?: number | null
          embed_id?: string | null
          embed_provider?: string | null
          entity_id: string
          entity_type: string
          file_size_bytes?: number | null
          height?: number | null
          id?: string
          is_nsfw?: boolean | null
          is_official?: boolean | null
          language_id?: string | null
          media_type_id: string
          mime_type?: string | null
          source_url?: string | null
          storage_bucket?: string | null
          storage_path?: string | null
          title?: string | null
          updated_at?: string
          updated_by?: string | null
          width?: number | null
        }
        Update: {
          asset_source?: Database["public"]["Enums"]["media_source"]
          caption?: string | null
          cdn_url?: string | null
          checksum?: string | null
          created_at?: string
          created_by?: string | null
          credit?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          duration_sec?: number | null
          embed_id?: string | null
          embed_provider?: string | null
          entity_id?: string
          entity_type?: string
          file_size_bytes?: number | null
          height?: number | null
          id?: string
          is_nsfw?: boolean | null
          is_official?: boolean | null
          language_id?: string | null
          media_type_id?: string
          mime_type?: string | null
          source_url?: string | null
          storage_bucket?: string | null
          storage_path?: string | null
          title?: string | null
          updated_at?: string
          updated_by?: string | null
          width?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "media_language_id_fkey"
            columns: ["language_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "media_media_type_id_fkey"
            columns: ["media_type_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      moderation_queue: {
        Row: {
          assigned_to: string | null
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          moderator_notes: string | null
          reason: string | null
          reported_by: string | null
          resolved_at: string | null
          resolved_by: string | null
          status: string | null
        }
        Insert: {
          assigned_to?: string | null
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          moderator_notes?: string | null
          reason?: string | null
          reported_by?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          status?: string | null
        }
        Update: {
          assigned_to?: string | null
          created_at?: string
          entity_id?: string
          entity_type?: string
          id?: string
          moderator_notes?: string | null
          reason?: string | null
          reported_by?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          status?: string | null
        }
        Relationships: []
      }
      people: {
        Row: {
          bio: string | null
          country_id: string | null
          created_at: string
          created_by: string | null
          date_of_birth: string | null
          deleted_at: string | null
          deleted_by: string | null
          full_name: string
          id: string
          updated_at: string
          updated_by: string | null
          website: string | null
        }
        Insert: {
          bio?: string | null
          country_id?: string | null
          created_at?: string
          created_by?: string | null
          date_of_birth?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          full_name: string
          id?: string
          updated_at?: string
          updated_by?: string | null
          website?: string | null
        }
        Update: {
          bio?: string | null
          country_id?: string | null
          created_at?: string
          created_by?: string | null
          date_of_birth?: string | null
          deleted_at?: string | null
          deleted_by?: string | null
          full_name?: string
          id?: string
          updated_at?: string
          updated_by?: string | null
          website?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "people_country_id_fkey"
            columns: ["country_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      permissions: {
        Row: {
          action: string
          conditions: Json | null
          created_at: string
          id: string
          resource: string
          role: Database["public"]["Enums"]["user_role"]
          updated_at: string
        }
        Insert: {
          action: string
          conditions?: Json | null
          created_at?: string
          id?: string
          resource: string
          role: Database["public"]["Enums"]["user_role"]
          updated_at?: string
        }
        Update: {
          action?: string
          conditions?: Json | null
          created_at?: string
          id?: string
          resource?: string
          role?: Database["public"]["Enums"]["user_role"]
          updated_at?: string
        }
        Relationships: []
      }
      rating_descriptors: {
        Row: {
          descriptor_id: string
          rating_id: string
        }
        Insert: {
          descriptor_id: string
          rating_id: string
        }
        Update: {
          descriptor_id?: string
          rating_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "rating_descriptors_descriptor_id_fkey"
            columns: ["descriptor_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "rating_descriptors_rating_id_fkey"
            columns: ["rating_id"]
            isOneToOne: false
            referencedRelation: "age_ratings"
            referencedColumns: ["id"]
          },
        ]
      }
      release_languages: {
        Row: {
          created_at: string
          created_by: string | null
          has_audio: boolean | null
          has_interface: boolean | null
          has_subtitles: boolean | null
          id: string
          language_id: string | null
          release_id: string | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          has_audio?: boolean | null
          has_interface?: boolean | null
          has_subtitles?: boolean | null
          id?: string
          language_id?: string | null
          release_id?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          has_audio?: boolean | null
          has_interface?: boolean | null
          has_subtitles?: boolean | null
          id?: string
          language_id?: string | null
          release_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "release_languages_language_id_fkey"
            columns: ["language_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "release_languages_release_id_fkey"
            columns: ["release_id"]
            isOneToOne: false
            referencedRelation: "releases"
            referencedColumns: ["id"]
          },
        ]
      }
      releases: {
        Row: {
          created_at: string
          created_by: string | null
          crosssave_available: boolean | null
          deleted_at: string | null
          deleted_by: string | null
          delisted_date: string | null
          delisted_reason: string | null
          distribution_format_id: string | null
          drm_tech_id: string | null
          edition_id: string
          id: string
          install_size_gb: number | null
          max_players_local: number | null
          max_players_online: number | null
          min_players_local: number | null
          min_players_online: number | null
          notes: string | null
          patch_baseline_version: string | null
          platform_id: string
          region_id: string
          release_date: string | null
          requires_online: boolean | null
          store_product_id: string | null
          store_url: string | null
          storefront_id: string | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          crosssave_available?: boolean | null
          deleted_at?: string | null
          deleted_by?: string | null
          delisted_date?: string | null
          delisted_reason?: string | null
          distribution_format_id?: string | null
          drm_tech_id?: string | null
          edition_id: string
          id?: string
          install_size_gb?: number | null
          max_players_local?: number | null
          max_players_online?: number | null
          min_players_local?: number | null
          min_players_online?: number | null
          notes?: string | null
          patch_baseline_version?: string | null
          platform_id: string
          region_id: string
          release_date?: string | null
          requires_online?: boolean | null
          store_product_id?: string | null
          store_url?: string | null
          storefront_id?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          crosssave_available?: boolean | null
          deleted_at?: string | null
          deleted_by?: string | null
          delisted_date?: string | null
          delisted_reason?: string | null
          distribution_format_id?: string | null
          drm_tech_id?: string | null
          edition_id?: string
          id?: string
          install_size_gb?: number | null
          max_players_local?: number | null
          max_players_online?: number | null
          min_players_local?: number | null
          min_players_online?: number | null
          notes?: string | null
          patch_baseline_version?: string | null
          platform_id?: string
          region_id?: string
          release_date?: string | null
          requires_online?: boolean | null
          store_product_id?: string | null
          store_url?: string | null
          storefront_id?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "releases_distribution_format_id_fkey"
            columns: ["distribution_format_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "releases_drm_tech_id_fkey"
            columns: ["drm_tech_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "releases_edition_id_fkey"
            columns: ["edition_id"]
            isOneToOne: false
            referencedRelation: "editions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "releases_platform_id_fkey"
            columns: ["platform_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "releases_region_id_fkey"
            columns: ["region_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "releases_storefront_id_fkey"
            columns: ["storefront_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      system_requirements: {
        Row: {
          cpu_name: string | null
          created_at: string
          created_by: string | null
          directx_api_id: string | null
          gpu_name: string | null
          id: string
          notes: string | null
          os_id: string | null
          ram_gb: number | null
          release_id: string | null
          requirement_type: string
          storage_gb: number | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          cpu_name?: string | null
          created_at?: string
          created_by?: string | null
          directx_api_id?: string | null
          gpu_name?: string | null
          id?: string
          notes?: string | null
          os_id?: string | null
          ram_gb?: number | null
          release_id?: string | null
          requirement_type: string
          storage_gb?: number | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          cpu_name?: string | null
          created_at?: string
          created_by?: string | null
          directx_api_id?: string | null
          gpu_name?: string | null
          id?: string
          notes?: string | null
          os_id?: string | null
          ram_gb?: number | null
          release_id?: string | null
          requirement_type?: string
          storage_gb?: number | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "system_requirements_directx_api_id_fkey"
            columns: ["directx_api_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "system_requirements_os_id_fkey"
            columns: ["os_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "system_requirements_release_id_fkey"
            columns: ["release_id"]
            isOneToOne: false
            referencedRelation: "releases"
            referencedColumns: ["id"]
          },
        ]
      }
      technical_specs: {
        Row: {
          anti_cheat_id: string | null
          cloud_provider_id: string | null
          cloud_saves: boolean | null
          created_at: string
          created_by: string | null
          framerate_modes: string | null
          graphics_presets_notes: string | null
          hdr_supported: boolean | null
          id: string
          ray_tracing: boolean | null
          release_id: string | null
          resolution_modes: string | null
          updated_at: string
          updated_by: string | null
          upscaler_name: string | null
          vr_platform_id: string | null
          vr_required: boolean | null
          vr_supported: boolean | null
          vrr_supported: boolean | null
        }
        Insert: {
          anti_cheat_id?: string | null
          cloud_provider_id?: string | null
          cloud_saves?: boolean | null
          created_at?: string
          created_by?: string | null
          framerate_modes?: string | null
          graphics_presets_notes?: string | null
          hdr_supported?: boolean | null
          id?: string
          ray_tracing?: boolean | null
          release_id?: string | null
          resolution_modes?: string | null
          updated_at?: string
          updated_by?: string | null
          upscaler_name?: string | null
          vr_platform_id?: string | null
          vr_required?: boolean | null
          vr_supported?: boolean | null
          vrr_supported?: boolean | null
        }
        Update: {
          anti_cheat_id?: string | null
          cloud_provider_id?: string | null
          cloud_saves?: boolean | null
          created_at?: string
          created_by?: string | null
          framerate_modes?: string | null
          graphics_presets_notes?: string | null
          hdr_supported?: boolean | null
          id?: string
          ray_tracing?: boolean | null
          release_id?: string | null
          resolution_modes?: string | null
          updated_at?: string
          updated_by?: string | null
          upscaler_name?: string | null
          vr_platform_id?: string | null
          vr_required?: boolean | null
          vr_supported?: boolean | null
          vrr_supported?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "technical_specs_anti_cheat_id_fkey"
            columns: ["anti_cheat_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "technical_specs_cloud_provider_id_fkey"
            columns: ["cloud_provider_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "technical_specs_release_id_fkey"
            columns: ["release_id"]
            isOneToOne: true
            referencedRelation: "releases"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "technical_specs_vr_platform_id_fkey"
            columns: ["vr_platform_id"]
            isOneToOne: false
            referencedRelation: "lookups"
            referencedColumns: ["id"]
          },
        ]
      }
      user_profiles: {
        Row: {
          avatar_url: string | null
          bio: string | null
          created_at: string
          display_name: string | null
          id: string
          is_active: boolean | null
          last_activity_at: string | null
          preferences: Json | null
          role: Database["public"]["Enums"]["user_role"]
          updated_at: string
          username: string
        }
        Insert: {
          avatar_url?: string | null
          bio?: string | null
          created_at?: string
          display_name?: string | null
          id: string
          is_active?: boolean | null
          last_activity_at?: string | null
          preferences?: Json | null
          role?: Database["public"]["Enums"]["user_role"]
          updated_at?: string
          username: string
        }
        Update: {
          avatar_url?: string | null
          bio?: string | null
          created_at?: string
          display_name?: string | null
          id?: string
          is_active?: boolean | null
          last_activity_at?: string | null
          preferences?: Json | null
          role?: Database["public"]["Enums"]["user_role"]
          updated_at?: string
          username?: string
        }
        Relationships: []
      }
    }
    Views: {
      game_statistics: {
        Row: {
          canonical_title: string | null
          earliest_release: string | null
          edition_count: number | null
          id: string | null
          latest_release: string | null
          platform_count: number | null
          release_count: number | null
        }
        Relationships: []
      }
    }
    Functions: {
      get_user_role: {
        Args: Record<PropertyKey, never>
        Returns: Database["public"]["Enums"]["user_role"]
      }
      has_permission: {
        Args: { p_action: string; p_resource: string }
        Returns: boolean
      }
      refresh_game_statistics: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
    }
    Enums: {
      game_status:
        | "announced"
        | "in_development"
        | "released"
        | "cancelled"
        | "delisted"
      media_source: "uploaded_file" | "external_url" | "embedded"
      user_role: "superadmin" | "admin" | "moderator" | "user"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

type DatabaseWithoutInternals = Omit<Database, "__InternalSupabase">

type DefaultSchema = DatabaseWithoutInternals[Extract<keyof Database, "public">]

export type Tables<
  DefaultSchemaTableNameOrOptions extends
    | keyof (DefaultSchema["Tables"] & DefaultSchema["Views"])
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &
        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &
      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema["Tables"] &
        DefaultSchema["Views"])
    ? (DefaultSchema["Tables"] &
        DefaultSchema["Views"])[DefaultSchemaTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  DefaultSchemaTableNameOrOptions extends
    | keyof DefaultSchema["Tables"]
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]
    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  DefaultSchemaTableNameOrOptions extends
    | keyof DefaultSchema["Tables"]
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]
    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  DefaultSchemaEnumNameOrOptions extends
    | keyof DefaultSchema["Enums"]
    | { schema: keyof DatabaseWithoutInternals },
  EnumName extends DefaultSchemaEnumNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = DefaultSchemaEnumNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema["Enums"]
    ? DefaultSchema["Enums"][DefaultSchemaEnumNameOrOptions]
    : never

export type CompositeTypes<
  PublicCompositeTypeNameOrOptions extends
    | keyof DefaultSchema["CompositeTypes"]
    | { schema: keyof DatabaseWithoutInternals },
  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]
    : never = never,
> = PublicCompositeTypeNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]
  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema["CompositeTypes"]
    ? DefaultSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]
    : never

export const Constants = {
  public: {
    Enums: {
      game_status: [
        "announced",
        "in_development",
        "released",
        "cancelled",
        "delisted",
      ],
      media_source: ["uploaded_file", "external_url", "embedded"],
      user_role: ["superadmin", "admin", "moderator", "user"],
    },
  },
} as const


